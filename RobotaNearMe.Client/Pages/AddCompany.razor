@page "/addcompany"
@using RobotaNearMe.Lib.Modelos
@using RobotaNearMe.Client.Services
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Add company</h3>

<form @onsubmit="OnSubmit">
    <div class="container mt-5">
        <div class="card text-dark">
            <div class="card-body">
                <div class="alert alert-warning">
                    This move will remove you from the role User and add you to role Admin. From now on, you won't be able to see job offers.
                </div>
                <div class="card-header">
                    <label class="h5">Add company</label>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <label for="companyName">Company name</label>
                        <input required @bind="_company.Name" id="companyName" class="form-control" placeholder="Enter company name" />
                        <span class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label for="companyWebsite">Company website</label>
                        <input required @bind="_company.Website" id="companyWebsite" class="form-control" placeholder="Enter company website" />
                        <span class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label for="companyInfo">Company info</label>
                        <textarea @bind="_company.Info" id="companyInfo" style="height: 150px;" class="form-control" placeholder="Enter company info"></textarea>
                        <span class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label for="companyProfilePicture">Company profile picture</label>
                        <input required @bind="_company.ProfilePicture" id="companyProfilePicture" class="form-control" placeholder="Enter company profile picture" />
                        <span class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label for="companyFounded">Founded in:</label>
                        <input required @bind="_company.Founded" id="companyFounded" class="form-control" placeholder="Enter founded year" />
                        <span class="text-danger"></span>
                    </div>

                    <RobotaNearMe.Client.Components.ContactComponent Contact="Contact"></RobotaNearMe.Client.Components.ContactComponent>

                </div>
                <div class="card-footer">
                    <button class="btn btn-success" type="submit">Add company</button>
                </div>
            </div>
        </div>
    </div>
</form>

@inject ApiService _service
@code {


    public Guid Id;
    public Guid ContactId;
    public Guid UserId;
    public ContactCompany Contact = new();
    public User Admin = new();

    private string _title;
    private string _description;
    private int _jobFieldId;
    private int _locationId;
    private List<int> _jobFieldIds = new();
    private List<JobField> _jobFields;
    private CompanyReal _company = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        string mail = user.Identity.Name;
        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            _jobFields = _service.GetJobFields().ToList();
            var useros = _service.GetUserByName(mail);
            Admin = useros;
        }
        else
        {

        }

    }
    private void OnSubmit()
    {
        if (_company != null)
        {

            var s = Contact;
            s.Id = Guid.NewGuid();
            s.DIC = "12312412";
            s.IC = "1541212";
            var c = _company;
            c.Admin = Admin;
            c.ContactCompanyId = s.Id;
            c.Id = Guid.NewGuid();
            c.UserId = Admin.Id;
            _service.PostCompanyContact(s);
            _service.PostCompany(c);
            
        }
    }

}
