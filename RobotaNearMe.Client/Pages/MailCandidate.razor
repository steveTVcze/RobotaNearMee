@page "/mailsomeone"
@using MimeKit
@using RobotaNearMe.Lib.Modelos
@using RobotaNearMe.Client.Services
@inject AuthenticationStateProvider AuthenticationStateProvider

<h1>Mail someone</h1>
<form asp-action="NewsletterEveryone" asp-controller="Admin">
    <div class="card" style="color:black">
        <div class="card-header">
            <label>Mail someone</label>
        </div>
        <div class="card-body">
            <div>Email :</div>
            @if (_candidates.Count != 0)
            {
                <select @bind="_selectedCandidate">
                    @foreach (var item in _candidates)
                    {
                        <option value="@item">@item</option>
                    }
                </select>
            }
            <div>Subject :</div>
            <input type="text" required style="width: 300px" @bind="_subject" name="Subject" />
            <div>Message :</div>
            <textarea type="text" required style="width: 600px" @bind="_message" name="Message" />
        </div>
        <div class="card-footer">
            <button class="btn-success" @onclick="OnSend">Mail someone</button>
        </div>
    </div>
</form>

@inject ApiService _service
@inject MailService _mailService
@code{
    string _subject = "";
    string _message = "";
    private User _user;
    private User _receiveUser;
    private CompanyReal _company;
    private string _selectedCandidate;
    private List<string> _candidates = new();
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        _user = _service.GetUserByName(user.Identity.Name);
        _company = _service.GetCompanyById(_user.Id);
        _candidates = _service.GetOffersInUsersForCompany(_company.Id).ToList();
    }
    private void OnSend(){
        _receiveUser = _service.GetUserByName(_selectedCandidate);
        _mailService.SendToSomeoneFromCompany(_receiveUser, _subject, _message, _company);
    }
}