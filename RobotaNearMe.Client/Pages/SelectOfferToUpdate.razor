@page "/updatejoboffer"
@using RobotaNearMe.Lib.Modelos
@using RobotaNearMe.Client.Services
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Update job offer</h3>

<div style="padding-top: 100px">
    <h3> All job offers by your company </h3>
    @foreach (var item in _jobOffers ?? _jobOffers)
    {
        <div> @item.Title </div>
        <div> @item.Language </div>
        <div> @item.Added </div>
        <button @onclick="(() => OnSelect(item))">More information</button>
    }
</div>

@inject ApiService _service
@inject NavigationManager NavigationManager
@code {
    private int _jobFieldId;
    private List<int> _jobFieldIds = new();
    private List<JobOffer> _jobOffers;
    private List<JobField> _jobFields;
    private JobType? _selectedJobType;
    private List<JobOffer> _filteredJobOffers;
    private LocationRegion? _selectedLocation;
    private CompanyReal _company;
    private User _user;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        _user = _service.GetUserByName(user.Identity.Name);
        _company = _service.GetCompanyById(_user.Id);
        _jobOffers = _service.GetOffers().Where(x => x.CompanyId == _company.Id).ToList();
        _jobFields = _service.GetJobFields().ToList();
        _filteredJobOffers = new List<JobOffer>();
    }
    private void OnSelect(JobOffer _selected)
    {
        NavigationManager.NavigateTo($"/updatejoboffer/{_selected.Id.ToString()}");
    }

}