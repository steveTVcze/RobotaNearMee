@page "/updatejoboffer/{jobOfferId}"
@using RobotaNearMe.Client.Data
@using RobotaNearMe.Client.Services
@using RobotaNearMe.Lib.Modelos
@inject AuthenticationStateProvider AuthenticationStateProvider

<RobotaNearMe.Client.Components.UpdateJobOfferComponent _jobOffer="_offer"></RobotaNearMe.Client.Components.UpdateJobOfferComponent>

@inject ApiService _service
@inject NavigationManager NavigationManager
@code {


    [Parameter] public string JobOfferId { get; set; }
    private JobOffer _offer { get; set; }

    private int _jobFieldId;
    private JobType? _selectedJobType;
    private LocationRegion? _selectedLocation;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        string mail = user.Identity.Name;
        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            Guid _realOfferId = Guid.Parse(JobOfferId);
            _offer = _service.GetOffers().Where(x => x.Id == _realOfferId).FirstOrDefault();
        }
        else
        {

        }
    }
    

}
